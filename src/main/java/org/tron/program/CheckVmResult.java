package org.tron.program;

import static org.tron.common.utils.AbiUtil.encodeInput;
import static org.tron.core.contract.CreateSmartContract.triggerCallContract;

import com.beust.jcommander.JCommander;
import com.beust.jcommander.Parameter;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.atomic.AtomicInteger;
import lombok.Getter;
import me.tongfei.progressbar.ProgressBar;
import me.tongfei.progressbar.ProgressBarStyle;
import org.spongycastle.util.encoders.Hex;
import org.tron.Validator.StringValidator;
import org.tron.api.GrpcAPI.TransactionExtention;
import org.tron.common.utils.AbiUtil;
import org.tron.common.utils.Base58;
import org.tron.core.exception.EncodingException;
import org.tron.protos.Contract.TriggerSmartContract;
import org.tron.protos.Protocol.Transaction;
import org.tron.service.WalletGrpcClient;

public class CheckVmResult {

  private static WalletGrpcClient client;
  private static List<String> transactionIds = new ArrayList<>();

  public static void main(String[] args) {
    Args argsObj = new Args();
    JCommander.newBuilder().addObject(argsObj).build().parse(args);

    client = new WalletGrpcClient(argsObj.getGRPC());

    // getTransactionInfoById
    CountDownLatch countDownLatch = new CountDownLatch(argsObj.getCount());
    ExecutorService service = Executors.newFixedThreadPool(50);

    ProgressBar generationPb = new ProgressBar("Getting result", transactionIds.size(),
        ProgressBarStyle.ASCII);

    AtomicInteger counter = new AtomicInteger(0);

    for (int i = 0; i < argsObj.getCount(); i++) {
      service.execute(() -> {
        TriggerSmartContract contract = null;
        try {

          String andIncrement = "" + counter.getAndIncrement();

          contract = triggerCallContract(Base58.decodeFromBase58Check(argsObj.getOwnerAddress()), Base58
                  .decodeFromBase58Check(argsObj.getContractAddress()), 0L,
              org.bouncycastle.util.encoders.Hex
                  .decode(AbiUtil.parseMethod("int2str(uint256)", andIncrement, false)));

          TransactionExtention transactionExtention = client.triggerContract(contract);

          if (transactionExtention == null || !transactionExtention.getResult().getResult()) {
            System.out.println("not found: " + andIncrement);
            generationPb.step();
            countDownLatch.countDown();
            return;
          }
          Transaction transaction = transactionExtention.getTransaction();
          if (transaction.getRetCount() != 0 &&
              transactionExtention.getConstantResult(0) != null &&
              transactionExtention.getResult() != null) {
            byte[] result = transactionExtention.getConstantResult(0).toByteArray();
            String computer = computer("int2str(string)", String.format(
                "\"%\"",
                andIncrement, andIncrement));

            if (!computer.equalsIgnoreCase(Hex.toHexString(result))) {
              System.out.println("not equal: " + andIncrement + ", get: " + Hex.toHexString(result) + ", expected: " + computer);
            }

            generationPb.step();
            countDownLatch.countDown();
          }
        } catch (EncodingException e) {
          e.printStackTrace();
        }

      });
    }

    try {
      countDownLatch.await();
      generationPb.close();
      Thread.sleep(1000);
    } catch (InterruptedException e) {
      e.printStackTrace();
      return;
    }

    System.out.println("end: " + counter.get());

    System.exit(0);
  }

  public static class Args {

    @Getter
    @Parameter(names = {
        "--grpc"}, description = "gRPC host", required = true, validateWith = StringValidator.class)
    private String gRPC;

    @Getter
    @Parameter(names = {
        "--count"}, description = "Count", required = true)
    private int count;

    @Getter
    @Parameter(names = {
        "--contract-address"}, description = "Contract address", required = true, validateWith = StringValidator.class)
    private String contractAddress;

    @Getter
    @Parameter(names = {
        "--owner-address"}, description = "Owner address", required = true, validateWith = StringValidator.class)
    private String ownerAddress;
  }

  public synchronized static String computer(String method, String args) throws EncodingException {
    return Hex.toHexString(encodeInput(method, args));
  }
}
